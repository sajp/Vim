snippet has "Moose attribute" b
has $1 => (
    is         => '${2:ro}',
    isa        => '${3:Str}',
    traits     => [ $4 ],
    default    => $5,
    lazy_build => ${6:1},
);
endsnippet

snippet todo "TODO" !b
#TODO ${1:desc} `echo $USER` `!v strftime("%c")`
endsnippet

snippet ife "Conditional if..else (ife)"
if ($1) {
	${2:# body...}
} else {
	${3:# else...}
}
endsnippet

snippet sub "Function (sub)"
=head2 ${1:function_name}

${2:desc}

=cut

sub $1 {
    my ( $3 ) = @_;
	$0
}
endsnippet

snippet sub_test "Test Class Function (sub)"
sub $1 : Test(no_plan) {
    my $test = shift;
    ok my $o = $test->_get_test_object, 'can grab test object';
	$0
}
endsnippet

snippet script_simple "Simple perl script" !b
#!/usr/bin/env perl
use strict;
use warnings FATAL => 'all';

use LIMS2::Model;
use Perl6::Slurp;
use feature qw( say );

my $model = LIMS2::Model->new( user => 'lims2', audit_user => $ENV{USER}.'@sanger.ac.uk' );

my @foo = map { chomp; $_ } slurp( $ARGV[0] );

endsnippet

snippet script "Perl Script" !b
#!/usr/bin/env perl
use strict;
use warnings FATAL => 'all';

use LIMS2::Model;
use Getopt::Long;
use Log::Log4perl ':easy';
use Pod::Usage;

my $log_level = $WARN;
GetOptions(
    'help'          => sub { pod2usage( -verbose => 1 ) },
    'man'           => sub { pod2usage( -verbose => 2 ) },
    'debug'         => sub { $log_level = $DEBUG },
    'verbose'       => sub { $log_level = $INFO },
) or pod2usage(2);

Log::Log4perl->easy_init( { level => $log_level, layout => '%p %x %m%n' } );
my $model = LIMS2::Model->new( user => 'lims2', audit_user => $ENV{USER}.'@sanger.ac.uk' );

__END__

=head1 NAME

`!v expand('%:t')` - $1

=head1 SYNOPSIS

  `!v expand('%:t')` [options]

      --help            Display a brief help message
      --man             Display the manual page
      --debug           Debug output
      --verbose         Verbose output

=head1 DESCRIPTION

=head1 AUTHOR

Sajith Perera

=head1 BUGS

None reported... yet.

=head1 TODO

=cut
endsnippet

snippet moose "Perl Moose Module" !b
package `!p snip.rv = path.replace('lib/', '').replace('.pm', ';').replace( '/', '::' )`

use warnings FATAL => 'all';

=head1 NAME

`!p snip.rv = path.replace('lib/', '').replace('.pm', '').replace( '/', '::' )`

=head1 DESCRIPTION

${2:description}

=cut

use Moose;
use namespace::autoclean;

$0

__PACKAGE__->meta->make_immutable;

1;

__END__
endsnippet
